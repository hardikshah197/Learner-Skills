{"version":3,"sources":["Components/HeaderComponent.js","Components/FooterComponent.js","Components/LoginComponent.js","Components/SideNavComponent.js","Components/CertificateComponent.js","Components/WebComponent.js","Components/ContactComponent.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","cot","handleNavBar","bind","handleCount","this","setState","Fragment","style","background","dark","expand","class","onClick","className","href","isOpen","navbar","color","to","type","placeholder","border","Component","Footer","url","listStyle","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","validPassword","Login","isModelOpen","isLoginOpen","handleSubmit","handleModalOpen","handleModelLoginOpen","handleLogin","values","alert","src","width","height","outline","aria-hidden","toggle","onSubmit","for","md","text","model","id","name","validators","show","messages","htmlFor","size","offset","check","checkbox","select","Siddle","useState","showNav","setShowNav","navitems","target","navTitle","onHideNav","title","titleStyle","items","Certificate","isOpenModal","setOpenModal","textDecoration","fontWeight","alignItems","Web","padding","marginTop","marginBottom","Contact","console","log","JSON","stringify","role","textarea","rows","withRouter","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6575f9e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, ButtonDropdown} from 'reactstrap';\r\nimport {NavLink } from 'react-router-dom';    \r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        var cot = false;\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            cot:false\r\n        }\r\n        this.handleNavBar = this.handleNavBar.bind(this);\r\n        this.handleCount = this.handleCount.bind(this);\r\n    }\r\n    handleNavBar() {\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen\r\n        });\r\n    }\r\n    handleCount(){\r\n        this.setState({\r\n            cot : !this.state.cot\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div  style={{background:\"#92BBFF\"}}>\r\n                <Navbar dark expand=\"md\" class=\"bg-primary\">\r\n                    <NavbarToggler class=\"bg-primary\" onClick = {this.handleNavBar} />\r\n                    <NavbarBrand className=\"mr-auto text-primary\" href=\"/\">\r\n                        {/* <img src=\"assert/images/logo.jpg\" widht=\"30\" height = \"30\" alt=\"Skills Learner\" /> */}\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar class=\"mt-3\">\r\n                            <NavItem>\r\n                                <NavLink className=\"mr-2 nav-link\" style={{color:\"#000D7F\"}} to=\"/home\" >\r\n                                    {/* <span className=\"fa fa-home fa-lg\"></span> Home */}\r\n                                    Institute\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"mr-2 nav-link\" style={{color:\"#000D7F\"}} to=\"/Certificate\" >\r\n                                    {/* <span className=\"fa fa-list fa-lg\"></span> Certificates */}\r\n                                    Certificates\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"mr-2 nav-link\"  style={{color:\"#000D7F\"}} to=\"/contactus\" >\r\n                                    {/* <span className=\"fa fa-address-card fa-lg\"></span> Contact Us */}\r\n                                    Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                    <input type=\"search\" placeholder=\"Search...\" style={{border:\"0.8px solid grey\"}} />\r\n                    <NavLink className=\"nav-link text-primary\" to=\"/Login\" >\r\n                        <Button className=\"ml-5 bg-secondary\"  onClick={this.handleCount}>Login</Button>\r\n                    </NavLink>\r\n                </Navbar>\r\n                </div>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Skills Learner Hub</h1>\r\n                                <p>We dadk ajdbakdkandfk jsandfla askdnlkas lkasndkas lm dknakd a, dkandfma akdnl;ad kdnka dknakd a!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <Jumbotron dark>\r\n        <div class=\"container d-inline-flex\">\r\n            <div className=\"footer-heading\">\r\n                <h3 class=\"text-primary\"><i class=\"fas fa-cloud mr-3\"></i><span class=\"text-dark\">Skills</span> To Learn</h3>\r\n                <p>\r\n                    5th Floor, A-118,\r\n                    Sector-136, Noida, Uttar Pradesh - 201305\r\n                </p>\r\n                <p>Email: feedback@geeksforgeeks.org</p>\r\n                <div class=\"social fex-1\">\r\n                <SocialIcon url=\"https://twitter.com/\" />\r\n                <SocialIcon url=\"https://youtube.com/\" />\r\n                <SocialIcon url=\"https://linkedin.com/\" />\r\n                <SocialIcon url=\"https://facebook.com/\" />\r\n                <SocialIcon url=\"https://instagram.com/\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"card-deck justify-content-around\" dark>\r\n                <div className=\"card ml-5 footer-links-1\">\r\n                    <ul class=\"card-body\" style={{listStyle:\"none\"}}>\r\n                        <h3 class=\"card-heading text-primary\">Link</h3>\r\n                        <li>sublinks</li>\r\n                        <li>sublinks</li>\r\n                        <li>sublinks</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"card ml-5 footer-links-2\">\r\n                    <ul class=\"card-body\" style={{listStyle:\"none\"}}>\r\n                        <h3 class=\"card-heading text-primary\">Link</h3>\r\n                        <li><a>sublinks</a></li>\r\n                        <li><a>sublinks</a></li>\r\n                        <li><a>sublinks</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </Jumbotron>\r\n    )\r\n}\r\nexport default Footer;","import React,{ Component } from 'react';\r\nimport { Row, Col, Label, Button, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst validPassword = (val) => /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/i.test(val);\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModelOpen: false,\r\n            isLoginOpen: false\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleModalOpen = this.handleModalOpen.bind(this);\r\n        this.handleModelLoginOpen = this.handleModelLoginOpen.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        alert(\"Entered Information: \" + (values));\r\n    }\r\n    handleLogin(values){\r\n        alert(\"Logined Values: \"+ values);\r\n    }\r\n    handleModalOpen(){\r\n        this.setState({\r\n            isModelOpen : !this.state.isModelOpen\r\n        })\r\n    }\r\n    handleModelLoginOpen(){\r\n        this.setState({\r\n            isLoginOpen : !this.state.isLoginOpen\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"card-deck m-5\" >\r\n                    <div class=\"card bg-primary\">\r\n                        <div class=\"card-body text-center\">\r\n                        <img src=\"assert/images/avtar.jpg\" width=\"200px\" height=\"250px\"/>\r\n                        <p class=\"card-text mt-3\">Some text inside the first card</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card bg-secondary\">\r\n                        <div class=\"card-body text-center\">\r\n                        <h3 class=\"card-heading mt-5\">Welcome to Skill World</h3>\r\n                        <p class=\"card-text\">Here is your choices to proceed further</p><br/><br/>\r\n                        <Button className=\" m-5 text-dark bg-primary\" outline dark onClick = {this.handleModalOpen}>\r\n                                <span className=\"fa fa-pencil fa-lg\" aria-hidden=\"true\"></span> Sign Up\r\n                        </Button>\r\n                        <Button className=\" m-5 text-dark bg-primary\" outline dark onClick = {this.handleModelLoginOpen}>\r\n                                <span className=\"fa fa-pencil fa-lg\" aria-hidden=\"true\"></span> Login\r\n                        </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            <Modal isOpen={this.state.isModelOpen} toggle={this.handleModalOpen}>\r\n            <ModalHeader toggle={this.handleModalOpen}>Sign Up</ModalHeader>\r\n            <ModalBody>\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                        <Label for=\"firstname\" md={2}>First Name</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                placeholder=\"First Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength:minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\" \r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be > 2 char',\r\n                                        maxLength: 'Must be < 16 char'\r\n                                    }} \r\n                                />\r\n                                \r\n                        </Col>\r\n                        </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label for=\"lastname\" md={2}>Last Name</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                placeholder=\"Last Name\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength:minLength(3), maxLength: maxLength(15)\r\n                                }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\" \r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be > 2 char',\r\n                                        maxLength: 'Must be < 16 char'\r\n                                    }} \r\n                                />\r\n                        </Col>\r\n                        </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"telnun\" md={2}>Contact Tel.</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                placeholder=\"Tel. Number\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\" \r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be > 2 char',\r\n                                        maxLength: 'Must be < 16 char',\r\n                                        isNumber: 'Must be Number'\r\n                                    }} \r\n                                />\r\n                        </Col>\r\n                        </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required, validEmail\r\n                                }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\" \r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n\r\n                                    }} \r\n                                />\r\n                        </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                        <Label htmlFor=\"email\" md={2}>Password</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".password\" id=\"password\" name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required,\r\n                                    validPassword\r\n                                }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\" \r\n                                    model=\".password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validPassword: 'Minimum eight characters, at least one letter, one number and one special character'\r\n                                    }} \r\n                                />\r\n                        </Col>\r\n                        </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Col md={{size:6, offset: 2}}>\r\n                            <div className=\"form-check\">\r\n                                <Label check>\r\n                                    <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                    className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                        <strong>Remember Me?</strong>\r\n                                </Label>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={{size:3, offset: 1}}>\r\n                            <Control.select model=\".contactType\" name=\"contactType\"\r\n                            className=\"form-control\"\r\n                                    >\r\n                                <option>Tel.</option>\r\n                                <option>Email</option>\r\n                            </Control.select>\r\n                        </Col>\r\n                        </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Col md={{size:10, offset:2}}>\r\n                            <Button type=\"submit\" color=\"primary\" onClick={this.handleSubmit}>\r\n                                Submit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </LocalForm>\r\n            </ModalBody>\r\n        </Modal>\r\n        <Modal isOpen={this.state.isLoginOpen} toggle={this.handleModelLoginOpen}>\r\n            <ModalHeader toggle={this.handleModelLoginOpen}>Login</ModalHeader>\r\n            <ModalBody>\r\n                <LocalForm onSubmit={(values) => this.handleLogin(values)}>\r\n                    <Row className=\"form-group\">\r\n                        <Label for=\"username\" md={2}>Username or EmailId</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".username\" id=\"username\" name=\"username\"\r\n                                placeholder=\"Enter Username or Email Id\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\" \r\n                                    model=\".username\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                        <Label htmlFor=\"email\" md={2}>Password</Label>\r\n                        <Col md={10}>\r\n                            <Control.text model=\".password\" id=\"password\" name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                className=\"form-control\"\r\n                                validators={{\r\n                                    required\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\" \r\n                                    model=\".password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required'\r\n                                    }} \r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size:15, offset:5}}>\r\n                                <Button type=\"submit\" color=\"primary\" onClick={this.handleLogin}>\r\n                                    Login\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { NavItem, NavbarToggler, Dropdown, DropdownItem, Nav} from 'reactstrap';\r\nimport { SideNav, SideNavBody, MenuIcon, MenuHeading } from 'react-simple-sidenav'; \r\nimport {NavLink} from 'react-router-dom';\r\n\r\n// class SideNavOpen extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             isSelectOpen: true,\r\n//             activeKey: 1\r\n//         }\r\n//         this.handleSide = this.handleSide.bind(this);\r\n//         this.handleSelect = this.handleSide.bind(this);\r\n//     }\r\n\r\n//     handleSide(){\r\n//         this.setState({\r\n//             isSelectOpen: !this.isSelectOpen\r\n//         })\r\n//     }\r\n\r\n//     handleSelect(eventSelect){\r\n//         this.setState({\r\n//             activeKey : eventSelect\r\n//         })\r\n//     }\r\nfunction Siddle(props) {\r\n    const [ showNav, setShowNav ] = useState(true);\r\n\r\n    const navitems = [\r\n        <NavLink target=\"_blank\" to=\"/Web\">\r\n            Machine Learning\r\n        </NavLink>,\r\n        <NavLink target=\"_blank\" to=\"/Web\">\r\n            Web Development\r\n        </NavLink>,\r\n        <NavLink target=\"_blank\" to=\"#\">\r\n            Android\r\n        </NavLink>\r\n    ]\r\n    const navTitle = <h3>Skills List</h3>\r\n\r\n    return(\r\n        <div style={{width:\"auto\"}}>\r\n            <div class=\"d-flex\">\r\n              <MenuIcon onClick={() => setShowNav(!showNav)} class=\"ml-5 bg-primary\" />\r\n              <h3 class=\"ml-3\">Skills</h3>\r\n            </div>\r\n            <SideNav showNav={showNav} onHideNav={() => setShowNav(false)} title={navTitle} titleStyle={{background: \"#067BFF\"}} items={navitems}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Siddle;","import React, { Component, useState, useEffect } from 'react';\r\nimport { Button, Row, Col, Label, Modal, ModalHeader, ModalBody, Card } from 'reactstrap';\r\nimport { LocalForm } from 'react-redux-form';\r\n\r\nfunction handleSubmit(values){\r\n    return(\r\n        alert(\"The Files you Uploaded are: \"+ (values))\r\n    )\r\n}\r\n\r\n// function handleAdd(values) {\r\n//     return(\r\n//         <div class=\"card bg-warning\">\r\n//             <div class=\"card-body text-center\">\r\n//                 <p class=\"card-text\">Some text inside the ${} card</p>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nfunction Certificate(props){\r\n    const [ isOpenModal, setOpenModal] = useState(false);\r\n    \r\n    return(\r\n        <div>\r\n            <div class=\"card-deck m-5 bg-info\">\r\n                <div class=\"card m-3\">\r\n                    <div class=\"card-heading ml-5\" style={{textDecoration: \"underline\"}}><h2 style={{fontWeight:\"none\"}}>Certificates:</h2></div>\r\n                    <div class=\"card-body text-center\">\r\n                        <input style={{alignItems: \"center\", width: \"auto\", border: \"1px solid black\"}} placeholder=\"Search Certificate...\"></input><hr /><br/>\r\n                        <Button className=\" m-5 text-dark bg-primary\" outline dark onClick={() => setOpenModal(!isOpenModal)}>\r\n                                <span className=\"fa fa-pencil fa-lg mr-2\" aria-hidden=\"true\"></span>Upload Certificate\r\n                        </Button>\r\n                        <Button className=\" m-5 text-dark bg-primary\" outline dark >\r\n                                <span className=\"fa fa-pencil fa-lg mr-2\" aria-hidden=\"true\"></span>Manage Certificate\r\n                        </Button><hr class=\"bg-secondary\" style={{height:\"0.2px\"}}/>\r\n                        {/* //Cards-deck just for a show purpose */}\r\n                       <div class=\"card-deck\">\r\n                            <div class=\"card bg-warning\">\r\n                                <div class=\"card-body text-center\">\r\n                                <p class=\"card-text\">Some text inside the second card</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card bg-success\">\r\n                                <div class=\"card-body text-center\">\r\n                                <p class=\"card-text\">Some text inside the third card</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card bg-danger\">\r\n                                <div class=\"card-body text-center\">\r\n                                <p class=\"card-text\">Some text inside the fourth card</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card bg-info\">\r\n                                <div class=\"card-body text-center\">\r\n                                <p class=\"card-text\">Some text inside the fourth card</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={isOpenModal} toggle={() => setOpenModal(!isOpenModal)}>\r\n                <ModalHeader toggle={() => setOpenModal(!isOpenModal)}>Upload Certificate</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => handleSubmit(values)}>\r\n                        <Row class=\"ml-5\">\r\n                            <Label>Select File :</Label>\r\n                            <Col md={8}>\r\n                            <input type=\"file\" name=\"upload\"></input></Col>\r\n                            <Button className=\" m-5 text-dark bg-primary\" outline dark onClick={() => setOpenModal(!isOpenModal)}>Done!</Button>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default Certificate;","import React from 'react';\r\n\r\nfunction Web(props) {\r\n    return(\r\n        <div>\r\n        <h3 class=\"m-4 ml-5 text-primary text-center\">Web Development</h3>\r\n        <div class=\"container\" style={{border:\"0.2px solid #919191\", padding:\"2rem\", marginTop:\"3rem\", marginBottom: '3rem'}}>\r\n                <h3 class=\"text-center\" style={{color:\"black\", fontWeight: \"200\"}}>Front End</h3><hr/>\r\n            <div class=\"card-deck\" style={{color:\"white\"}}>\r\n                <div class=\"card bg-warning\" >\r\n                    <div class=\"card-title text-center mt-2\"><h3><a>HTML</a></h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the second card</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-success\">\r\n                    <div class=\"card-title text-center mt-2\"><h3>CSS</h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the third card</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-danger\">\r\n                    <div class=\"card-title text-center mt-2\"><h3>Java-Script</h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the fourth card</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-info\">\r\n                    <div class=\"card-title text-center mt-2\"><h3>React</h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the fourth card</p>\r\n                    </div>\r\n                </div>\r\n            </div><br/>\r\n            <h3 class=\"text-center\" style={{color:\"black\", fontWeight: \"200\"}}>Back End</h3><hr/>\r\n            <div class=\"card-deck\" style={{color:\"white\"}}>\r\n            \r\n            <div class=\"card bg-warning\" >\r\n                    <div class=\"card-title text-center mt-2\"><h3>Node JS</h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the second card</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-success\">\r\n                    <div class=\"card-title text-center mt-2\"><h3>Bootstrap</h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the third card</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-danger\">\r\n                    <div class=\"card-title text-center mt-2\"><h3>Angular</h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the fourth card</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card bg-info\">\r\n                    <div class=\"card-title text-center mt-2\"><h3>React-Native</h3></div>\r\n                    <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">Some text inside the fourth card</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Web;","import React ,{ Component }from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Form , Button, Formgroup,Label,Input,Col,Row,FormFeedback, FormGroup, Tag} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    \r\n    handleSubmit(values){\r\n        console.log(\"Current state: \" + JSON.stringify(values));\r\n        alert(\"Current state: \" + JSON.stringify(values));\r\n        \r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {/* <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb> */}\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3><br/>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, khatra mahal Bhooto wali gali<br />\r\n                            Shumshan ke samne , Patal Lok<br />\r\n                            Indanio <br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div><br/><hr/>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3><br/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label for=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\" \r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be > 2 char',\r\n                                                maxLength: 'Must be < 16 char'\r\n                                            }} \r\n                                        />\r\n                                        \r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label for=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                        <Errors\r\n                                            className=\"text-danger\" \r\n                                            model=\".lastname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be > 2 char',\r\n                                                maxLength: 'Must be < 16 char'\r\n                                            }} \r\n                                        />\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnun\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                        <Errors\r\n                                            className=\"text-danger\" \r\n                                            model=\".telnum\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be > 2 char',\r\n                                                maxLength: 'Must be < 16 char',\r\n                                                isNumber: 'Must be Number'\r\n                                            }} \r\n                                        />\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                       <Errors\r\n                                            className=\"text-danger\" \r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                               validEmail: 'Invalid Email Address'\r\n\r\n                                            }} \r\n                                        />\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\"\r\n                                         >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Login from './LoginComponent';\r\nimport Siddle from './SideNavComponent';\r\nimport Certificate from './CertificateComponent';\r\nimport Web from './WebComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Switch, Route,Redirect, withRouter } from 'react-router-dom';\r\n\r\nfunction Main(props) {\r\n        return(\r\n            <div>\r\n            <Header />\r\n            <Siddle />\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/certificate\" component={Certificate} />\r\n                <Route exact path=\"/Web\" component={Web} />\r\n                <Route exact path=\"/contactus\" component={Contact} />\r\n                <Redirect to=\"/login\" />\r\n            </Switch>\r\n            <Footer />\r\n            </div>\r\n        );\r\n    }\r\nexport default withRouter(Main);","import React from 'react';\nimport Main from './Components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    //<Provider store={store}>\n    \n    <BrowserRouter>\n        <Main />\n        </BrowserRouter>\n      //</Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}